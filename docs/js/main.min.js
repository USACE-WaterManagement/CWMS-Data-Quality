import QualityTx from"./index.min.mjs";import{saveSettings,loadSettings}from"./settings.js";import{bin2dec,dec2bin,$}from"./utils.js";const bitMapOptions={SCREENED_ID:["SCREENED","UNSCREENED"],VALIDITY_ID:["UNKNOWN","OKAY","MISSING","QUESTIONABLE","REJECTED"],RANGE_ID:["NO_RANGE","RANGE_1","RANGE_2","RANGE_3"],CHANGED_ID:["MODIFIED","ORIGINAL"],REPL_CAUSE_ID:["NONE","AUTOMATIC","INTERACTIVE","MANUAL","RESTORED"],REPL_METHOD_ID:["NONE","LIN_INTERP","EXPLICIT","MISSING","GRAPHICAL"],TEST_FAILED_ID:["ABSOLUTE_VALUE","CONSTANT_VALUE","RATE_OF_CHANGE","RELATIVE_VALUE","DURATION_VALUE","NEG_INCREMENT","SKIP_LIST","USER_DEFINED","DISTRIBUTION"],UNUSED:[],PROTECTION_ID:["PROTECTED","UNPROTECTED"]},CLEAR_BITS="00000000000000000000000000000000",qualityCodeInput=$("#qualityCode"),checkCodeElem=$("#checkCode"),qualityTableBodyElem=$("#qualityTable").querySelector("tbody"),createTableBodyElem=$("#createTable").querySelector("tbody"),clearCodeElem=$("#clearCode"),bitBinMapInput=$("#bitBinMap"),bitDecMapInput=$("#bitDecMap"),inputGroupSizingElem=$("#inputGroup-sizing-default"),inputBitCountElem=$("#inputBitCount");let screened_message_count=0;const qtx=new QualityTx;let settings=loadSettings();function clearTable(){qualityTableBodyElem.innerHTML=`<tr name="temp-msg"><td colspan="9" class="h5 text-center">Table Cleared - Enter an integer from ${qualityCodeInput.min} to ${qualityCodeInput.max}</td></tr>`}function addRow(e){document.getElementsByName("temp-msg").forEach((e=>e.remove()));const t=document.createElement("tr");t.innerHTML=`<td class="col">${e.QUALITY_CODE}</td>\n        <td>${e.SCREENED_ID}</td>\n        <td>${e.VALIDITY_ID}</td>\n        <td>${e.RANGE_ID}</td>\n        <td>${e.CHANGED_ID}</td>\n        <td>${e.REPL_CAUSE_ID}</td>\n        <td>${e.REPL_METHOD_ID}</td>\n        <td>${e.PROTECTION_ID}</td>\n        <td>${e.TEST_FAILED_ID}</td>`,qualityTableBodyElem.appendChild(t)}function onBinaryChange(e){"Control"==e.key||e.ctrlKey||["0","1","Backspace","Delete","ArrowLeft","ArrowRight","ArrowUp","ArrowDown"].includes(e.key)||(bitBinMapInput.classList.remove("border-dark"),bitBinMapInput.classList.add("border-warning"),inputGroupSizingElem.classList.add("bg-warning"),inputGroupSizingElem.innerText="Use 1 or 0",setTimeout((()=>{bitBinMapInput.classList.remove("border-warning"),bitBinMapInput.classList.add("border-dark"),inputGroupSizingElem.classList.remove("bg-warning"),inputGroupSizingElem.innerText="Bit Map"}),1e3),e.preventDefault())}function setCreateTabDropdowns(e){let t=qtx.isScreened_int(e);t||(bitBinMapInput.value=CLEAR_BITS,bitDecMapInput.value=bin2dec(CLEAR_BITS),e=bitDecMapInput.value,screened_message_count<1&&(alert("DATA QUALITY RULE 1 : Screened bit must be set to enable other bits"),screened_message_count+=1));let n=qtx.getStringDescription(e,!0);delete n.QUALITY_CODE;for(const e in n){const a=document.getElementById(e),i=n[e];if(a.value=n[e],"SCREENED_ID"!=e&&(a.disabled=!t),a?.multiple)for(const e of i.split("+"))for(const t of a.options)t.innerText==e&&(t.selected=!0)}}checkCodeElem.addEventListener("click",(()=>{if(!qualityCodeInput.value)return void alert(`Enter a value from ${qualityCodeInput.min} to ${qualityCodeInput.max}`);let e=document.querySelectorAll("tr td:first-of-type");for(const t of e)if(t.innerText==qualityCodeInput.value)return alert(`Row Exists for Quality Code ${qualityCodeInput.value}`),void(qualityCodeInput.value="");addRow(qtx.getStringDescription(qualityCodeInput.value,!0))})),clearCodeElem.addEventListener("click",clearTable),addRow(qtx.getStringDescription(0,!0)),addRow(qtx.getStringDescription(1,!0)),addRow(qtx.getStringDescription(3,!0)),addRow(qtx.getStringDescription(5,!0)),addRow(qtx.getStringDescription(9,!0)),addRow(qtx.getStringDescription(Math.floor(Math.random()*qualityCodeInput.max),!0)),bitBinMapInput.addEventListener("keyup",onBinaryChange),bitBinMapInput.addEventListener("change",onBinaryChange),bitBinMapInput.addEventListener("keyup",(()=>{if(inputBitCountElem.innerText=bitBinMapInput.value.length+" / 32",32==bitBinMapInput.value.length){let e=bin2dec(bitBinMapInput.value);bitDecMapInput.value=e,setCreateTabDropdowns(e),inputBitCountElem.classList.replace("border-danger","border-success")}else inputBitCountElem.classList.replace("border-success","border-danger")})),bitDecMapInput.addEventListener("keydown",(e=>{e.target.value&&setTimeout((()=>{parseInt(e.target.value)>parseInt(e.target.max)&&(e.target.value=e.target.max),parseInt(e.target.value)<parseInt(e.target.min)&&(e.target.value=e.target.min),bitBinMapInput.value=dec2bin(e.target.value),setCreateTabDropdowns(e.target.value)}),300)})),document.querySelectorAll('[role="tab"]').forEach((e=>{e.addEventListener("click",(e=>{settings.tab=e.target.id,saveSettings(settings)})),e.id==settings?.tab&&e.click()})),createTableBodyElem.querySelectorAll("tr").forEach((e=>{const t=document.createElement("select"),n=e.children[1].innerText;"TEST_FAILED_ID"==n&&(t.multiple=!0),t.innerHTML="",t.id=n,t.title="Hold Ctrl or Shift to select multiple",t.name="bit-map-select";let a="",i=bitMapOptions[n];if(0!=i.length){for(const e of i)a+=`<option>${e}</option>`;t.innerHTML=a,t.classList.add("w-100"),t.classList.add("text-center"),e.children[2].appendChild(t)}})),setCreateTabDropdowns(bin2dec(bitBinMapInput.value)),document.querySelectorAll('[name="bit-map-select"]').forEach((e=>{e.addEventListener("change",(e=>{let t="",n=bin2dec(bitBinMapInput.value);if(e.target.multiple){let a=Array.from(e.target.selectedOptions).map((({value:e})=>e));n=qtx.clearAllTest_int(n),a.includes("ABSOLUTE_VALUE")&&(n=qtx.setAbsoluteMagnitude_int(n)),a.includes("CONSTANT_VALUE")&&(n=qtx.setConstantValue_int(n)),a.includes("RATE_OF_CHANGE")&&(n=qtx.setRateOfChange_int(n)),a.includes("RELATIVE_VALUE")&&(n=qtx.setRelativeMagnitude_int(n)),a.includes("DURATION_VALUE")&&(n=qtx.setDurationMagnitude_int(n)),a.includes("NEG_INCREMENT")&&(n=qtx.setNegativeIncremental_int(n)),a.includes("SKIP_LIST")&&(n=qtx.setGageList_int(n)),a.includes("USER_DEFINED")&&(n=qtx.setUserDefinedTest_int(n)),a.includes("DISTRIBUTION")&&(n=qtx.setDistributionTest_int(n)),t=n}else switch(e.target.id){case"SCREENED_ID":t="SCREENED"==e.target.value?qtx.setScreened_int(n):qtx.clearBit_int(n);break;case"VALIDITY_ID":switch(e.target.value){case"REJECTED":t=qtx.setReject_int(n);break;case"OKAY":t=qtx.setOkay_int(n);break;case"MISSING":t=qtx.setMissing_int(n);break;case"QUESTIONABLE":t=qtx.setQuestion_int(n);break;case"UNKNOWN":t=qtx.clearReject_int(n),t=qtx.clearOkay_int(t),t=qtx.clearMissing_int(t),t=qtx.clearQuestion_int(t)}case"RANGE_ID":switch(e.target.value){case"NO_RANGE":t=qtx.clearRange_int(n);break;case"RANGE_0":t=qtx.setRange0_int(n);break;case"RANGE_1":t=qtx.setRange1_int(n);break;case"RANGE_2":t=qtx.setRange2_int(n);break;case"RANGE_3":t=qtx.setRange3_int(n)}break;case"CHANGED_ID":switch(e.target.value){case"ORIGINAL":t=qtx.clearDifferentValue_int(n);break;case"MODIFIED":t=qtx.setDifferentValue_int(n)}case"REPL_CAUSE_ID":switch(e.target.value){case"NONE":t=qtx.setNoRevision_int(n);break;case"AUTOMATIC":t=qtx.setRevisedAutomatically_int(n);break;case"INTERACTIVE":t=qtx.setRevisedInteractively_int(n);break;case"MANUAL":t=qtx.setRevisedManually_int(n);break;case"RESTORED":t=qtx.setRevisedToOriginalAccepted_int(n)}case"REPL_METHOD_ID":switch(e.target.value){case"NONE":t=qtx.clearReplaceMethod_int(n);break;case"LIN_INTERP":t=qtx.setReplaceLinearInterpolation_int(n);break;case"EXPLICIT":t=qtx.setReplaceManualChange_int(n);break;case"MISSING":t=qtx.setReplaceWithMissing_int(n);break;case"GRAPHICAL":t=qtx.setReplaceGraphicalChange_int(n)}case"PROTECTION_ID":switch(e.target.value){case"UNPROTECTED":t=qtx.clearProtected_int(n);break;case"PROTECTED":t=qtx.setProtected_int(n)}}""!==t&&(bitBinMapInput.value=dec2bin(t),bitDecMapInput.value=t)}))}));